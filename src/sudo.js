const table=[];

const genereteSudo = (complexity, selector) => {
    switch(complexity) {
        case 'Easy':
            switch(selector) {
                case 0:
                    table.push(
                        8, 4, 5, 1, 3, 9, 2, 7, 6,
                        3, 1, 2, 8, 7, 6, 5, 4, 9,
                        9, 7, 6, 5, 4, 2, 8, 3, 1,
                        5, 8, 2, 6, 9, 7, 4, 1, 3,
                        1, 6, 7, 2, 3, 4, 9, 5, 8,
                        3, 9, 4, 1, 8, 5, 2, 6, 7,
                        7, 5, 1, 9, 6, 8, 3, 2, 4,
                        4, 9, 3, 7, 2, 5, 6, 8, 1,
                        6, 2, 8, 4, 1, 3, 7, 5, 9
                    );
                    break;
                case 1:
                    table.push(
                        6, 9, 8, 7, 5, 3, 1, 2, 4,
                        3, 5, 2, 9, 4, 1, 8, 7, 6,
                        7, 1, 4, 8, 2, 6, 3, 5, 9,
                        5, 7, 6, 3, 8, 1, 9, 4, 2,
                        2, 3, 9, 7, 6, 4, 5, 1, 8,
                        1, 4, 8, 2, 9, 5, 6, 7, 3,
                        8, 6, 7, 4, 3, 9, 2, 1, 5,
                        4, 2, 5, 1, 8, 7, 6, 9, 3,
                        9, 3, 1, 5, 6, 2, 4, 8, 7
                    );
                    break;
                default:
                    table.push(
                        5, 3, 2, 7, 9, 8, 4, 6, 1,
                        9, 6, 7, 2, 1, 4, 3, 5, 8,
                        8, 4, 1, 6, 5, 3, 2, 7, 9,
                        2, 4, 9, 1, 7, 5, 3, 8, 6,
                        6, 3, 5, 8, 9, 2, 4, 7, 1,
                        7, 1, 8, 3, 6, 4, 9, 2, 5,
                        8, 2, 7, 6, 5, 3, 9, 1, 4,
                        5, 4, 3, 1, 2, 9, 7, 8, 6,
                        1, 9, 6, 4, 8, 7, 5, 3, 2
                    );
            }
            break;
        case 'Middle':
            switch(selector) {
                case 0:
                    table.push(
                        1, 7, 5, 2, 4, 3, 6, 8, 9,
                        8, 6, 2, 9, 5, 1, 4, 3, 7,
                        9, 4, 3, 8, 7, 6, 5, 1, 2,
                        5, 1, 2, 3, 9, 4, 8, 6, 7,
                        3, 8, 6, 7, 2, 5, 1, 4, 9,
                        4, 9, 7, 6, 8, 1, 2, 3, 5,
                        4, 2, 1, 7, 5, 8, 9, 3, 6,
                        5, 9, 3, 6, 1, 4, 2, 7, 8,
                        7, 6, 8, 3, 2, 9, 1, 5, 4
                    );
                    break;
                case 1:
                    table.push(
                        3, 8, 2, 6, 5, 1, 7, 4, 9,
                        6, 1, 9, 2, 7, 4, 3, 8, 5,
                        4, 7, 5, 8, 9, 3, 1, 2, 6,
                        1, 6, 8, 9, 2, 5, 4, 7, 3,
                        4, 5, 2, 7, 3, 8, 9, 6, 1,
                        9, 3, 7, 6, 4, 1, 2, 5, 8,
                        8, 3, 4, 5, 9, 6, 2, 1, 7,
                        1, 9, 7, 8, 2, 3, 5, 4, 6,
                        5, 6, 2, 7, 1, 4, 3, 8, 9
                    );
                    break;
                default:
                    table.push(
                        4, 3, 7, 6, 9, 1, 5, 8, 2,
                        2, 9, 5, 3, 7, 8, 1, 4, 6,
                        6, 8, 1, 2, 4, 5, 9, 3, 7,
                        3, 1, 4, 9, 7, 6, 2, 5, 8,
                        6, 2, 9, 5, 8, 1, 7, 3, 4,
                        7, 5, 8, 3, 2, 4, 1, 9, 6,
                        1, 4, 3, 8, 2, 5, 7, 6, 9,
                        8, 6, 2, 9, 1, 7, 4, 5, 3,
                        5, 7, 9, 4, 6, 3, 8, 1, 2 
                    );
            }
            break;
        default:
            switch(selector) {
                case 0:
                    table.push(
                        3, 5, 6, 8, 2, 1, 9, 4, 7,
                        1, 2, 7, 9, 4, 6, 5, 8, 3,
                        8, 4, 9, 3, 7, 5, 1, 2, 6,
                        2, 6, 9, 7, 1, 8, 5, 3, 4,
                        7, 5, 8, 3, 9, 4, 2, 6, 1,
                        4, 3, 1, 6, 5, 2, 7, 9, 8,
                        6, 8, 5, 4, 9, 3, 1, 7, 2,
                        4, 7, 2, 8, 1, 5, 6, 3, 9,
                        9, 1, 3, 2, 6, 7, 5, 8, 4
                    );
                    break;
                case 1:
                    table.push(
                        7, 6, 1, 2, 4, 9, 8, 5, 3,
                        5, 3, 9, 8, 6, 7, 1, 4, 2,
                        8, 4, 2, 5, 1, 3, 7, 9, 6,
                        1, 7, 5, 4, 8, 2, 3, 9, 6,
                        6, 9, 3, 7, 5, 1, 2, 8, 4,
                        2, 8, 4, 3, 6, 9, 1, 7, 5,
                        9, 1, 4, 5, 2, 8, 6, 3, 7,
                        3, 7, 5, 9, 1, 6, 4, 2, 8,
                        6, 2, 8, 4, 3, 7, 9, 5, 1
                    );
                    break;
                default:
                    table.push(
                        7, 3, 9, 1, 8, 2, 5, 6, 4,
                        6, 4, 8, 3, 7, 5, 1, 9, 2,
                        1, 5, 2, 6, 9, 4, 3, 8, 7,
                        9, 7, 1, 4, 2, 3, 8, 5, 6,
                        5, 4, 3, 8, 6, 9, 2, 1, 7,
                        2, 6, 8, 5, 7, 1, 9, 4, 3,
                        2, 1, 5, 6, 4, 7, 3, 9, 8,
                        7, 8, 6, 9, 2, 3, 4, 5, 1,
                        4, 3, 9, 8, 1, 5, 7, 2, 6
                    );
            }
    }
}


    const renew = (arr, arr1 = undefined) => {
        if(arr instanceof Array) {
            if(arr.length < 1) {
                for(let i=0; i<9; i++) {
                    arr.push(i+1);
                }
            }
            return;
        }
        for(let i of Object.keys(arr)) {
            arr[i].length = 0;
        }
        for(let i of Object.keys(arr1)) {
            arr1[i].length = 0;
        }
    }

    const sudo = {
        table: table,
        renew: renew,
        genereteSudo: genereteSudo
    }

export { sudo };